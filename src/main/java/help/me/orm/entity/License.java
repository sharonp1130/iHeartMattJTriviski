package help.me.orm.entity;
// Generated Nov 26, 2015 6:04:16 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.search.annotations.Field;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * License generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Embeddable
@Table(name = "license",  uniqueConstraints = @UniqueConstraint(columnNames = {"licenseNumber", "user"}) )
public class License implements java.io.Serializable {
	
	@JsonProperty("licenseNumber")
	private String licenseNumber;
	
	@JsonIgnore
	private Service service;
	@JsonIgnore
	private int licenseId;
	@JsonIgnore
	private User user;
	@JsonIgnore
	private Date createdAt;
	@JsonIgnore
	private Date updatedAt;

	public License() {
	}

	public License(int licenseId, User user, String licenseNumber, Service service) {
		this.licenseId = licenseId;
		this.user = user;
		this.licenseNumber = licenseNumber;
		this.service = service;
	}

	public License(int licenseId, User user, String licenseNumber, Service service, Date createdAt, Date updatedAt) {
		this.licenseId = licenseId;
		this.user = user;
		this.licenseNumber = licenseNumber;
		this.service = service;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Transient
	@Field
	public Integer getServiceId() {
		return service == null ? null : service.getServiceId();
	}

	@Transient
	public String getServiceDescription() {
		return service == null ? null : service.getDescription();
	}

	@Id
	@GeneratedValue(generator="licenseIncrement")
	@GenericGenerator(name="licenseIncrement", strategy = "increment")
	@Column(name = "licenseId", unique = true, nullable = false)
	public int getLicenseId() {
		return this.licenseId;
	}

	public void setLicenseId(int licenseId) {
		this.licenseId = licenseId;
	}

	@JoinColumn(name = "user")
	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.ALL)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "licenseNumber", unique = true, nullable = false, length = 32)
	@JsonProperty("licenseNumber")
	public String getLicenseNumber() {
		return this.licenseNumber;
	}

	public void setLicenseNumber(String licenseNumber) {
		this.licenseNumber = licenseNumber;
	}

	@JoinColumn(name = "service")
	@OneToOne(fetch=FetchType.EAGER, cascade=CascadeType.ALL)
	@JsonProperty("service")
	public Service getService() {
		return this.service;
	}

	public void setService(Service service) {
		this.service = service;
	}

	@Generated(GenerationTime.INSERT) 
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19, insertable=false, updatable=false)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Generated(GenerationTime.ALWAYS) 
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19, insertable=false, updatable=true)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("License [licenseId=");
		builder.append(licenseId);
		builder.append(", user=");
		builder.append(user == null ? null : user.getUserId());
		builder.append(", licenseNumber=");
		builder.append(licenseNumber);
		builder.append(", service=");
		builder.append(service);
		builder.append(", createdAt=");
		builder.append(createdAt);
		builder.append(", updatedAt=");
		builder.append(updatedAt);
		builder.append("]");
		return builder.toString();
	}


}
