package help.me.orm.entity;
// Generated Nov 26, 2015 6:04:16 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;
import org.hibernate.annotations.GenericGenerator;

/**
 * Location generated by hbm2java
 * @author triviski
 *
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "location")
public class Location implements java.io.Serializable {

	private int locationId;
	private User user;
	private double longitude;
	private double latitude;
	private Date createdAt;
	private Date updatedAt;

	public Location() {
	}

	/**
	 * @param locationId
	 * @param user
	 * @param longitude
	 * @param latitude
	 */
	public Location(int locationId, User user, double longitude, double latitude) {
		this.locationId = locationId;
		this.user = user;
		this.longitude = longitude;
		this.latitude = latitude;
	}

	/**
	 * @param locationId
	 * @param user
	 * @param longitude
	 * @param latitude
	 * @param createdAt
	 * @param updatedAt
	 */
	public Location(int locationId, User user, double longitude, double latitude, Date createdAt, Date updatedAt) {
		this.locationId = locationId;
		this.user = user;
		this.longitude = longitude;
		this.latitude = latitude;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id
	@GeneratedValue(generator="locationIncrement")
	@GenericGenerator(name="locationIncrement", strategy = "increment")
	@Column(name = "locationId", unique = true, nullable = false)
	public int getLocationId() {
		return this.locationId;
	}

	public void setLocationId(int locationId) {
		this.locationId = locationId;
	}

	@ManyToOne(cascade=CascadeType.ALL)
    @JoinColumn(name="user", nullable=false, updatable=false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "longitude", nullable = false, precision = 22, scale = 0)
	public double getLongitude() {
		return this.longitude;
	}

	public void setLongitude(double longitude) {
		this.longitude = longitude;
	}

	@Column(name = "latitude", nullable = false, precision = 22, scale = 0)
	public double getLatitude() {
		return this.latitude;
	}

	public void setLatitude(double latitude) {
		this.latitude = latitude;
	}

	@Generated(GenerationTime.INSERT) 
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19, insertable=false, updatable=false)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Generated(GenerationTime.ALWAYS) 
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19, insertable=false, updatable=true)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Location [locationId=");
		builder.append(locationId);
		builder.append(", user=");
		builder.append(user);
		builder.append(", longitude=");
		builder.append(longitude);
		builder.append(", latitude=");
		builder.append(latitude);
		builder.append(", createdAt=");
		builder.append(createdAt);
		builder.append(", updatedAt=");
		builder.append(updatedAt);
		builder.append("]");
		return builder.toString();
	}


}
