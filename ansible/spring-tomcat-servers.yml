---
# This playbook runs on Ubuntu 14.4 systems only.  Will install 
# all of the necessary packages for a help me rest server.
- hosts: spring-tomcat-servers
  remote_user: root
  
  pre_tasks:
    # Add all the required repos and keys to install mariaDB 10.
    - name: Install software properties common
      apt: name=software-properties-common
      tags: pre
      
    - name: Add apt key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=0xcbcb082a1bb943db state=present
      tags: pre
      
    - name: Add repository for Ubuntu 14.4
      apt_repository: repo="{{ item }}"
      with_items: 
        - 'deb http://ftp.kaist.ac.kr/mariadb/repo/10.0/ubuntu trusty main'
        - 'ppa:openjdk-r/ppa'
      register: results
      tags: pre
      
    - name: Update apt-cache if the repo was added.
      apt: update_cache=yes
      when: results.changed
      tags: pre
      
    - name: Install java
      apt: name=openjdk-8-jdk
      register: java_install
      tags: pre
      
    - name: Set the default java version 
      alternatives: name=java path=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
      tags: pre
     
      
  vars: 
    http_port: 80
    db_name: help_me_db
    mysql_user: helper
    mysql_helper_password: H3lp3rp@$$w0rd
    new_user_password: 2489xtc432%
    
    mysql_root_password: chickenTastesGood(123)
    
    # This will force change the password.
    mysql_root_password_update: yes

    mysql_enabled_on_startup: yes
    
    # Using the same file as the ansible-mysql, but we are creating 
    # our own database because we need to make sure that we do not
    # drop the database.
    mysql_users: 
      - name: "{{ mysql_user }}"
        host: "%"
        password: "{{ mysql_helper_password }}"
        priv: "{{ db_name }}.*:ALL"
        
    # I guess this is the default so things won't start
    # if this doesn't match what is configured in mysql.  
    # This goes to the /etc/mysql/my.cnf file so if this 
    # needs to change will have to figure that out some other 
    # time
    mysql_innodb_log_file_size: 5M
    
    # Mariadb for ubuntu
    mysql_packages:
      - mariadb-client
      - mariadb-server
      - python-mysqldb
      
    
    # Daemonize variables
    daemon_service_name: helpme
    daemon_pidfile: "/tmp/helpme.pid"
    daemon: /usr/bin/java 
    daemon_user: "{{ mysql_user }}"
    daemon_etc: "/etc/{{ daemon_service_name }}"
    daemon_properties: "{{ daemon_etc }}/properties"
    daemon_bin: "{{ daemon_etc }}/bin"
    daemon_opts: "-Djava.security.egd=file:/dev/./urandom -jar {{ war_executable }} --spring.config.location=file:{{ daemon_properties }}/application.properties"

    # Deployment variables.
    war_file: "../target/backend-0.0.2-SNAPSHOT-executable.war"
    war_dest_dir: "{{ daemon_bin }}"
    
    dump_file: help_me_db.dump.sql
    dump_dest: "/tmp/{{ dump_file }}"
    
  #tasks:
  #  - name: Check to see if database "{{ db_name }}" exists
  #    mysql_db: state=present name="{{ db_name }}"
  #    tags: db-load
  #    register: db_exists
    
  #  - name: Copy db dump file to remote
  #    copy: src="{{ dump_file }}" dest="{{ dump_dest }}"
  #    tags: db-load
  #    when: db_exists.changed
      
  #  - name: Load dump file {{ dump_dest }}
  #    mysql_db: state=import name="{{ db_name }}" target="{{ dump_dest }}"
  #    tags: db-load
  #    when: db_exists.changed
    
  
  roles:
    - { role: add_user, new_user: "{{ mysql_user }}", tags: [user] }
    - { role: local-mycnf, tags: [user, mysql] }
    - { role: ansible-mysql, tags: [install, mysql]}
    - { role: load-db, tags: [db-load]}
    - { role: daemonize, tags: [deploy, daemon]}
